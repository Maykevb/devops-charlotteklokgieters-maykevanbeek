kind: Environment
name: dev
type: primary
urlHandle: monitoring
components:
  -
    kind: Service
    name: grafana
    dockerCompose:
      environment:
        GF_SECURITY_ADMIN_PASSWORD: test123
        GF_SECURITY_ADMIN_USER: alex
      image: 'grafana/grafana:9.5.2'
      ports:
        - '3000:3000'
    hosts:
      -
        hostname: 'grafana-{{ env.base_domain }}'
        path: /
        servicePort: 3000
  -
    kind: Service
    name: prometheus
    dockerCompose:
      command:
        - '--web.enable-lifecycle'
      hostname: prometheus
      image: 'prom/prometheus:latest'
      volumes:
        - './prometheus:/etc/prometheus'
        - 'prometheus-data:/prometheus'
      ports:
        - '9090:9090'
      depends_on:
        - register-service
        - auth-service
        - db-exporter
    hosts:
      -
        hostname: 'prometheus-{{ env.base_domain }}'
        path: /
        servicePort: 9090
  -
    kind: Service
    name: db-exporter
    dockerCompose:
      image: 'bitnami/mongodb-exporter:latest'
      environment:
        - MONGODB_URI=mongodb://root:root@mongodb:27017
      depends_on:
        - mongodb
    hosts: []
  -
    kind: Service
    name: register-service
    dockerCompose:
      build:
        context: ./register-service
        dockerfile: Dockerfile-RegisterService
      ports:
        - '4000:4000'
      depends_on:
        - mongodb
        - rabbitmq
      environment:
        REGISTERPORT: 4000
        JWT_SECRET_PARTICIPANT: participant
        JWT_SECRET_TARGETOWNER: targetowner
        REGISTER_MONGO_URL: mongodb://mongodb:27017/devops-register-service
        AMQP_URL: amqp://rabbitmq:5672
    hosts:
      -
        hostname: 'register-service-{{ env.base_domain }}'
        path: /
        servicePort: 4000
  -
    kind: Service
    name: auth-service
    dockerCompose:
      build:
        context: ./auth-service
        dockerfile: Dockerfile-AuthService
      ports:
        - '5000:5000'
      depends_on:
        - mongodb
        - rabbitmq
      environment:
        AUTHPORT: 5000
        JWT_SECRET_PARTICIPANT: participant
        JWT_SECRET_TARGETOWNER: targetowner
        AUTH_MONGO_URL: mongodb://mongodb:27017/devops-auth-service
        AMQP_URL: amqp://rabbitmq:5672
    hosts:
      -
        hostname: 'auth-service-{{ env.base_domain }}'
        path: /
        servicePort: 5000
  -
    kind: Service
    name: rabbitmq
    dockerCompose:
      image: 'rabbitmq:latest'
      hostname: rabbitmq
      labels:
        NAME: rabbitmq
      ports:
        - '5672:5672'
    hosts: []
  -
    kind: Service
    name: mongodb
    dockerCompose:
      image: 'mongo:latest'
      restart: always
      volumes:
        - 'mongodb_data:/data/db'
      ports:
        - '27017:27017'
      environment:
        MONGO_USERNAME: root
        MONGO_PASSWORD: root
    hosts:
      -
        hostname: 'mongodb-{{ env.base_domain }}'
        path: /
        servicePort: 27017
  -
    kind: Service
    name: mynode
    dockerCompose:
      hostname: nodeexporter
      image: prom/node-exporter
      ports:
        - '9100:9100'
    hosts:
      -
        hostname: 'mynode-{{ env.base_domain }}'
        path: /
        servicePort: 9100
  -
    kind: Service
    name: scrapeapp
    dockerCompose:
      hostname: goexporter
      image: 'dejanualex/go_promexporter:1.0'
      ports:
        - '5000:5000'
    hosts:
      -
        hostname: 'scrapeapp-{{ env.base_domain }}'
        path: /
        servicePort: 5000
